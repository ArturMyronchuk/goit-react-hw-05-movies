{"version":3,"file":"static/js/22.27778e0b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"green\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </Wrapper>\n  );\n};\n","import { useParams, useLocation, Outlet, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { responses } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  NoPoster,\n  Wrapper,\n  Button,\n  Flex,\n  Div,\n  Container,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieData = async () => {\n      try {\n        setIsLoading(true);\n        const movieDetails = await responses.fetchMovieById(movieId);\n        setMovieData(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieData();\n  }, [movieId]);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleMoveBack = () => {\n    if (location.state) {\n      navigate(location.state.from);\n      return;\n    }\n    navigate('/');\n  };\n\n  const imgSrc = movieData?.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movieData.poster_path}`\n    : '';\n\n  return (\n    <Container>\n      <Flex>\n        <Wrapper>\n          <Button onClick={handleMoveBack}>â—€â—€ Go back</Button>\n          {error && <p>{error.message}</p>}\n          {isLoading && <Loader />}\n          {imgSrc ? (\n            <img\n              src={imgSrc}\n              alt={movieData?.title}\n              width=\"400px\"\n              height=\"600px\"\n              loading=\"lazy\"\n            />\n          ) : (\n            <NoPoster />\n          )}\n        </Wrapper>\n        {movieData !== null && (\n          <Wrapper>\n            <h1>{movieData.title}</h1>\n            <p>\n              User Score:{' '}\n              {!movieData.vote_average\n                ? '0'\n                : ((movieData.vote_average * 1000) / 100).toFixed()}\n              %\n            </p>\n            <h2>Overview</h2>\n            <p>{movieData.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieData.genres?.length > 0\n                ? movieData.genres?.map(({ name }) =>\n                    name.replace(/([A-Z])/g, ' $1')\n                  )\n                : 'No results of genres'}\n            </p>\n          </Wrapper>\n        )}\n      </Flex>\n      <Div>\n        <StyledLink to=\"cast\">Cast ðŸ‘ˆ</StyledLink>\n        <StyledLink to=\"reviews\">Reviews ðŸ‘ˆ</StyledLink>\n      </Div>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","_movieData$genres","_movieData$genres2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieDetails","wrap","_context","prev","next","responses","sent","t0","message","finish","stop","apply","arguments","fetchMovieData","location","useLocation","navigate","useNavigate","imgSrc","poster_path","concat","_jsxs","Container","Flex","Button","onClick","state","from","src","alt","title","loading","NoPoster","vote_average","toFixed","overview","genres","length","map","_ref2","name","replace","Div","StyledLink","to","Outlet"],"sourceRoot":""}