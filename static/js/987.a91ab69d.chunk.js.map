{"version":3,"file":"static/js/987.a91ab69d.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"green\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </Wrapper>\n  );\n};\n","import { BsFillPersonVcardFill } from 'react-icons/bs';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NoPoster = styled(BsFillPersonVcardFill)`\n  width: 450px;\n  height: auto;\n  object-fit: cover;\n  color: #a8cee7;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-bottom: 20px;\n`;\nexport const Button = styled.button`\n  width: 400px;\n  border: none;\n  background: #dddbdb;\n  font-weight: 500;\n  font-size: 20px;\n`;\nexport const Flex = styled.div`\n  display: flex;\n  column-gap: 30px;\n  background: #dddbdb;\n`;\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  border: 1px solid #797c7c;\n  background: #f4f7f8;\n`;\nexport const Container = styled.div`\n  padding-left: 30px;\n  padding-right: 30px;\n`;\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  font-weight: 900;\n  font-size: 20px;\n  &.active {\n    color: red;\n  }\n`;\n","import { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { responses } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  NoPoster,\n  Wrapper,\n  Button,\n  Flex,\n  Div,\n  Container,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieData = async () => {\n      try {\n        setIsLoading(true);\n        const movieDetails = await responses.fetchMovieById(movieId);\n        setMovieData(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieData();\n  }, [movieId]);\n\n  const handleMoveBack = () => {\n    navigate(-1);\n  };\n\n  const imgSrc = movieData?.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movieData.poster_path}`\n    : '';\n\n  return (\n    <Container>\n      <Flex>\n        <Wrapper>\n          <Button onClick={handleMoveBack}>◀◀ Go back</Button>\n          {error && <p>{error.message}</p>}\n          {isLoading && <Loader />}\n          {imgSrc ? (\n            <img\n              src={imgSrc}\n              alt={movieData?.title}\n              width=\"400px\"\n              height=\"600px\"\n              loading=\"lazy\"\n            />\n          ) : (\n            <NoPoster />\n          )}\n        </Wrapper>\n        {movieData !== null && (\n          <Wrapper>\n            <h1>{movieData.title}</h1>\n            <p>\n              User Score:{' '}\n              {!movieData.vote_average\n                ? '0'\n                : ((movieData.vote_average * 1000) / 100).toFixed()}\n              %\n            </p>\n            <h2>Overview</h2>\n            <p>{movieData.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieData.genres?.length > 0\n                ? movieData.genres?.map(({ name }) =>\n                    name.replace(/([A-Z])/g, ' $1')\n                  )\n                : 'No results of genres'}\n            </p>\n          </Wrapper>\n        )}\n      </Flex>\n      <Div>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n      </Div>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '8b8fbecbc585ee4df16b8b3d4e4beedc';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const responses = {\n  async fetchPopularMovies() {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    return await response.json();\n  },\n  async fetchMovieById(movieId) {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return await response.json();\n  },\n  async fetchMovieBySearch(searchQuery) {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n    );\n    return await response.json();\n  },\n  async fetchMovieByCast(movieId) {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return await response.json();\n  },\n  async fetchMovieByReviews(movieId) {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return await response.json();\n  },\n};\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","NoPoster","BsFillPersonVcardFill","_templateObject2","Button","_templateObject3","Flex","_templateObject4","Div","_templateObject5","Container","_templateObject6","StyledLink","NavLink","_templateObject7","_movieData$genres","_movieData$genres2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","navigate","useNavigate","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieDetails","wrap","_context","prev","next","responses","sent","t0","message","finish","stop","apply","arguments","fetchMovieData","imgSrc","poster_path","concat","_jsxs","onClick","src","alt","title","loading","vote_average","toFixed","overview","genres","length","map","_ref2","name","replace","to","Outlet","API_KEY","BASE_URL","fetchPopularMovies","response","fetch","json","abrupt","fetchMovieById","_callee2","_context2","fetchMovieBySearch","searchQuery","_callee3","_context3","fetchMovieByCast","_callee4","_context4","fetchMovieByReviews","_callee5","_context5"],"sourceRoot":""}